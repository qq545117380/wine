<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zmj.wine.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.zmj.wine.entity.Order">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_time" jdbcType="DATE" property="orderTime" />
    <result column="order_name" jdbcType="VARCHAR" property="orderName" />
    <result column="order_address" jdbcType="VARCHAR" property="orderAddress" />
    <result column="order_price" jdbcType="INTEGER" property="orderPrice" />
    <result column="order_discounts" jdbcType="INTEGER" property="orderDiscounts" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="order_carriage" jdbcType="INTEGER" property="orderCarriage" />
    <result column="order_pay_way" jdbcType="VARCHAR" property="orderPayWay" />
    <result column="order_img" jdbcType="VARCHAR" property="orderImg" />
    <result column="order_status" jdbcType="VARCHAR" property="orderStatus" />
    <result column="order_explain" jdbcType="VARCHAR" property="orderExplain" />
    <!--联合查询，查询订单的时候 同时查询对应的用户 -->
    <association property="user" column="user_id"
                 select="com.zmj.wine.dao.UserMapper.selectUserById"/>
  </resultMap>
  <sql id="Base_Column_List">
    order_id, user_id, order_no, order_time, order_name, order_address, order_price, 
    order_discounts, order_num, order_carriage, order_pay_way, order_img, order_status, 
    order_explain
  </sql>

  <!--查询订单的总数量-->
  <select id="selectOrderNum" resultType="java.lang.Integer">
    select count(1) from tb_order;
  </select>

  <!--后台分页查询所有的订单-->
  <select id="selectAllOrder" resultMap="BaseResultMap">
    select
    order_id, user_id, order_no, order_time, order_name, order_address, order_price,
    order_discounts, order_num, order_carriage, order_pay_way, order_img, order_status,
    order_explain
    from tb_order
    limit #{index},#{size};
  </select>

  <!--后台根据订单状态查询订单信息-->
  <select id="selectOrderByStatus" resultMap="BaseResultMap">
    select
    order_id, user_id, order_no, order_time, order_name, order_address, order_price,
    order_discounts, order_num, order_carriage, order_pay_way, order_img, order_status,
    order_explain
    from tb_order
    where order_status=#{status}
    limit #{index},#{size};
  </select>

  <!--根据订单状态查询订单数量-->
  <select id="selectOrderNumByStatus" resultType="java.lang.Integer">
    select count(1) from tb_order where order_status = #{status}
  </select>



  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zmj.wine.entity.Order">
    insert into tb_order (order_id, user_id, order_no, 
      order_time, order_name, order_address, 
      order_price, order_discounts, order_num, 
      order_carriage, order_pay_way, order_img, 
      order_status, order_explain)
    values (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, 
      #{orderTime,jdbcType=DATE}, #{orderName,jdbcType=VARCHAR}, #{orderAddress,jdbcType=VARCHAR}, 
      #{orderPrice,jdbcType=INTEGER}, #{orderDiscounts,jdbcType=INTEGER}, #{orderNum,jdbcType=INTEGER}, 
      #{orderCarriage,jdbcType=INTEGER}, #{orderPayWay,jdbcType=VARCHAR}, #{orderImg,jdbcType=VARCHAR}, 
      #{orderStatus,jdbcType=VARCHAR}, #{orderExplain,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zmj.wine.entity.Order">
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="orderName != null">
        order_name,
      </if>
      <if test="orderAddress != null">
        order_address,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="orderDiscounts != null">
        order_discounts,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="orderCarriage != null">
        order_carriage,
      </if>
      <if test="orderPayWay != null">
        order_pay_way,
      </if>
      <if test="orderImg != null">
        order_img,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="orderExplain != null">
        order_explain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=DATE},
      </if>
      <if test="orderName != null">
        #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderAddress != null">
        #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=INTEGER},
      </if>
      <if test="orderDiscounts != null">
        #{orderDiscounts,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="orderCarriage != null">
        #{orderCarriage,jdbcType=INTEGER},
      </if>
      <if test="orderPayWay != null">
        #{orderPayWay,jdbcType=VARCHAR},
      </if>
      <if test="orderImg != null">
        #{orderImg,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderExplain != null">
        #{orderExplain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zmj.wine.entity.Order">
    update tb_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=DATE},
      </if>
      <if test="orderName != null">
        order_name = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderAddress != null">
        order_address = #{orderAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=INTEGER},
      </if>
      <if test="orderDiscounts != null">
        order_discounts = #{orderDiscounts,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="orderCarriage != null">
        order_carriage = #{orderCarriage,jdbcType=INTEGER},
      </if>
      <if test="orderPayWay != null">
        order_pay_way = #{orderPayWay,jdbcType=VARCHAR},
      </if>
      <if test="orderImg != null">
        order_img = #{orderImg,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderExplain != null">
        order_explain = #{orderExplain,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zmj.wine.entity.Order">
    update tb_order
    set user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=DATE},
      order_name = #{orderName,jdbcType=VARCHAR},
      order_address = #{orderAddress,jdbcType=VARCHAR},
      order_price = #{orderPrice,jdbcType=INTEGER},
      order_discounts = #{orderDiscounts,jdbcType=INTEGER},
      order_num = #{orderNum,jdbcType=INTEGER},
      order_carriage = #{orderCarriage,jdbcType=INTEGER},
      order_pay_way = #{orderPayWay,jdbcType=VARCHAR},
      order_img = #{orderImg,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=VARCHAR},
      order_explain = #{orderExplain,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>